const fs = require('fs');
const path = require('path');

const MENU_MD_PATH = path.join(__dirname, '..', 'docs', 'menu.md');
const MENU_TS_PATH = path.join(__dirname, '..', 'src', 'content', 'menu.ts');

function parseMarkdown() {
  const content = fs.readFileSync(MENU_MD_PATH, 'utf-8');
  const lines = content.split('\n');

  const menuData = {
    title: '',
    currency: 'EUR',
    categories: [],
  };

  let currentCategory = null;

  for (const line of lines) {
    const trimmedLine = line.trim();

    if (trimmedLine.startsWith('# ')) {
      menuData.title = trimmedLine.substring(2).trim();
      continue;
    }

    if (trimmedLine.startsWith('# currency=')) {
        menuData.currency = trimmedLine.split('=')[1].trim();
        continue;
    }

    if (trimmedLine.startsWith('## ')) {
      if (currentCategory) {
        menuData.categories.push(currentCategory);
      }
      currentCategory = {
        name: trimmedLine.substring(3).trim(),
        items: [],
      };
      continue;
    }

    if (trimmedLine.startsWith('- ') && currentCategory) {
      const itemLine = trimmedLine.substring(2).trim();
      const parts = itemLine.split('::').map(p => p.trim());
      
      if (parts.length >= 3) {
        const [name, description, priceStr, tagsStr, allergensStr] = parts;
        
        const tags = tagsStr?.replace('tags=', '').split(',').map(t => t.trim()).filter(Boolean) || [];
        const allergens = allergensStr?.replace('allergens=', '').split(',').map(a => a.trim()).filter(Boolean) || [];

        const price = parseFloat(priceStr);

        currentCategory.items.push({
          name,
          description: description || null,
          price: !isNaN(price) ? price : null,
          tags,
          allergens,
        });
      }
    }
  }

  if (currentCategory) {
    menuData.categories.push(currentCategory);
  }

  return menuData;
}

function generateTypeScript(menuData) {
  const tsContent = `/* eslint-disable */
// This file is generated by \`npm run generate:menu\`. Do not edit it manually.
// To update the menu, edit \`docs/menu.md\` and run the script.

export type MenuItem = {
  name: string;
  description?: string | null;
  price: number | null;
  tags: string[];
  allergens: string[];
};

export type MenuCategory = {
  name: string;
  items: MenuItem[];
};

export type MenuData = {
  title: string;
  currency: string;
  categories: MenuCategory[];
};

export const MENU: MenuData = ${JSON.stringify(menuData, null, 2)};
`;

  fs.writeFileSync(MENU_TS_PATH, tsContent, 'utf-8');
  console.log(`✅ Menu data generated successfully at ${MENU_TS_PATH}`);
}

try {
  const menuData = parseMarkdown();
  generateTypeScript(menuData);
} catch (error) {
  console.error('❌ Error generating menu from Markdown:', error);
  process.exit(1);
}
